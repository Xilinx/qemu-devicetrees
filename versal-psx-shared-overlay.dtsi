/*
 * Versal PSX Shared Overlay.
 * This contains the overlay that's suitable for the both QEMU
 * instances in a multi-arch PSX/PMX setup.
 *
 * Copyright (c) 2021, Xilinx Inc
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *     * Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *     * Neither the name of the <organization> nor the
 *       names of its contributors may be used to endorse or promote products
 *       derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

#include "versal.dtsh"

#define MM_USB_DWC3_1			(MM_USB_XHCI1 + 0xC100)
#define MM_USB_DWC3_1_SIZE		0x600

#define VERSAL_NET_CRL_RST_USB0		3
#define VERSAL_NET_CRL_RST_USB1		4

&ipi {
	interrupts = <PSMX_IRQMAP_OFFSET(IRQ_PSMX_IPI)
		      PMX_PPU1_IRQMAP_OFFSET(IRQ_PPU1_INTC_PMX_IPI)
		      IPI0_IRQ_0 IPI1_IRQ_0
		      IPI2_IRQ_0 IPI3_IRQ_0
		      IPI4_IRQ_0 IPI5_IRQ_0
		      IPI6_IRQ_0
		      PMX_PPU1_IRQMAP_OFFSET(IRQ_PPU1_INTC_PMX_IPI_NOBUF)
		      IPI_MISC_IRQ_0
		      IPI_NOBUF1_IRQ_0
		      IPI_NOBUF2_IRQ_0
		      IPI_NOBUF3_IRQ_0
		      IPI_NOBUF4_IRQ_0
		      IPI_NOBUF5_IRQ_0
		      IPI_NOBUF6_IRQ_0>;
	num-master-ids = <32>;
};

/ {
	MEMATTR(usb1, NON_SECURE, SMID_USB1);
};

&dwc3_0 {
	reset-gpios = <&crl VERSAL_NET_CRL_RST_USB0>;
};

&amba_lpd {
	dwc3_1: usb2@USB2_0_XHCI1 {
		compatible = "usb_dwc3";
		reg = <0x0 MM_USB_DWC3_1 0x0 MM_USB_DWC3_1_SIZE 0x0 0x0 MM_USB_XHCI1 0x0 MM_USB_XHCI1_SIZE 0x0>;
		interrupts = <USB1_int_IRQ_0 USB1_int_IRQ_1 USB1_int_IRQ_2 USB1_int_IRQ_3>;
		dma = <&smmu_tbu0>;
		memattr = <&usb1_memattr>;
		reset-gpios = <&crl VERSAL_NET_CRL_RST_USB1>;
		intrs = <4>;
		slots = <2>;
	};
};
